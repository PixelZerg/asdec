class
 refid "com.company.assembleegameclient.mapeditor:METile"
 instance QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("com.company.assembleegameclient.mapeditor:METile")
  iinit
   refid "com.company.assembleegameclient.mapeditor:METile/instance/init"
   body
    maxstack 5
    localcount 1
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     findpropstrict      Multiname("Vector", [PackageNamespace("__AS3__.vec")])
     getproperty         Multiname("Vector", [PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:METile/instance#0"), PackageNamespace("__AS3__.vec"), PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:METile/instance#1"), PackageNamespace(""), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:METile"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:METile")])
     getlex              QName(PackageNamespace(""), "int")
     applytype           1
     pushbyte            3
     construct           1
     dup
     pushbyte            0
     pushbyte            -1
     setproperty         MultinameL([PackageNamespace("")])

     dup
     pushbyte            1
     pushbyte            -1
     setproperty         MultinameL([PackageNamespace("")])

     dup
     pushbyte            2
     pushbyte            -1
     setproperty         MultinameL([PackageNamespace("")])

     initproperty        QName(PackageNamespace(""), "types_")

     getlocal0
     constructsuper      0

     getlocal0
     pushbyte            0
     initproperty        QName(PackageNamespace(""), "layerNumber")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace(""), "types_") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>) end
  trait slot QName(PackageNamespace(""), "objName_") type QName(PackageNamespace(""), "String") value Null() end
  trait slot QName(PackageNamespace(""), "layerNumber") type QName(PackageNamespace(""), "int") end
  trait method QName(PackageNamespace(""), "clone")
   method
    refid "com.company.assembleegameclient.mapeditor:METile/instance/clone"
    returns QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      constructprop       QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile"), 0
      coerce              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "METile")
      setlocal1

      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "types_")
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "concat"), 0
      setproperty         QName(PackageNamespace(""), "types_")

      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "objName_")
      setproperty         QName(PackageNamespace(""), "objName_")

      getlocal1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "isEmpty")
   method
    refid "com.company.assembleegameclient.mapeditor:METile/instance/isEmpty"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal1

      jump                L15

L5:
      label
      getlocal0
      getproperty         QName(PackageNamespace(""), "types_")
      getlocal1
      getproperty         MultinameL([PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:METile/instance#0"), PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:METile/instance#1"), PackageNamespace(""), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:METile"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:METile")])
      pushbyte            -1
      ifeq                L14

      pushfalse
      returnvalue

L14:
      inclocal_i          1
L15:
      getlocal1
      getlex              QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "Layer")
      getproperty         QName(PackageNamespace(""), "NUM_LAYERS")
      iflt                L5

      pushtrue
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "com.company.assembleegameclient.mapeditor:METile/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
