class
 refid "kabam.lib.tasks:TaskSequence"
 instance QName(PackageNamespace("kabam.lib.tasks"), "TaskSequence")
  extends QName(PackageNamespace("kabam.lib.tasks"), "BaseTask")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.lib.tasks:TaskSequence")
  iinit
   refid "kabam.lib.tasks:TaskSequence/instance/init"
   body
    maxstack 3
    localcount 1
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     getlocal0
     getlex              Multiname("Vector", [PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#1"), PackageNamespace(""), PackageNamespace("kabam.lib.tasks"), PackageInternalNs("kabam.lib.tasks"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.lib.tasks:TaskSequence"), StaticProtectedNs("kabam.lib.tasks:TaskSequence"), StaticProtectedNs("kabam.lib.tasks:BaseTask"), PackageNamespace("__AS3__.vec")])
     getlex              QName(PackageNamespace("kabam.lib.tasks"), "Task")
     applytype           1
     construct           0
     initproperty        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("kabam.lib.tasks"), "Task")>) end
  trait slot QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "index") type QName(PackageNamespace(""), "int") end
  trait slot QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "continueOnFail") type QName(PackageNamespace(""), "Boolean") end
  trait method QName(PackageNamespace(""), "getContinueOnFail")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/getContinueOnFail"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 1
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "continueOnFail")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setContinueOnFail")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/setContinueOnFail"
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      initproperty        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "continueOnFail")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "add")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/add"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks")
      getlocal1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(ProtectedNamespace("kabam.lib.tasks:TaskSequence"), "startTask") flag OVERRIDE
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence:startTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      pushbyte            0
      initproperty        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "index")

      getlocal0
      callpropvoid        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "doNextTaskOrComplete"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(ProtectedNamespace("kabam.lib.tasks:TaskSequence"), "onReset") flag OVERRIDE
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence:onReset"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 4
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("kabam.lib.tasks"), "Task")
      setlocal1

      pushbyte            0
      setlocal2

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks")
      coerce_a
      setlocal3

      jump                L20

L12:
      label
      getlocal3
      getlocal2
      nextvalue
      coerce              QName(PackageNamespace("kabam.lib.tasks"), "Task")
      setlocal1

      getlocal1
      callpropvoid        QName(Namespace("kabam.lib.tasks:Task"), "reset"), 0

L20:
      hasnext2            3, 2
      iftrue              L12

      kill                3
      kill                2
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "doNextTaskOrComplete")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence/instance/doNextTaskOrComplete"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      callproperty        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "isAnotherTask"), 0
      iffalse             L8

      getlocal0
      callpropvoid        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "doNextTask"), 0

      jump                L11

L8:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      pushtrue
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 1

L11:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "isAnotherTask")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence/instance/isAnotherTask"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "index")
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks")
      getproperty         QName(PackageNamespace(""), "length")
      lessthan
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "doNextTask")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence/instance/doNextTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 4
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "tasks")
      getlocal0
      dup
      setlocal2

      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "index")
      dup
      increment_i
      setlocal3

      getlocal2
      getlocal3
      setproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "index")

      kill                3
      kill                2
      getproperty         MultinameL([PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#1"), PackageNamespace(""), PackageNamespace("kabam.lib.tasks"), PackageInternalNs("kabam.lib.tasks"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.lib.tasks:TaskSequence"), StaticProtectedNs("kabam.lib.tasks:TaskSequence"), StaticProtectedNs("kabam.lib.tasks:BaseTask")])
      coerce              QName(PackageNamespace("kabam.lib.tasks"), "Task")
      setlocal1

      getlocal1
      getproperty         QName(Namespace("kabam.lib.tasks:Task"), "lastly")
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "onTaskFinished")
      callpropvoid        QName(PackageNamespace(""), "addOnce"), 1

      getlocal1
      callpropvoid        QName(Namespace("kabam.lib.tasks:Task"), "start"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "onTaskFinished")
   method
    refid "kabam.lib.tasks:TaskSequence/instance/kabam.lib.tasks:TaskSequence/instance/onTaskFinished"
    param QName(PackageNamespace("kabam.lib.tasks"), "Task")
    param QName(PackageNamespace(""), "Boolean")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 4
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal2
      convert_b
      dup
      iftrue              L10

      pop
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "continueOnFail")
      convert_b
L10:
      iffalse             L14

      getlocal0
      callpropvoid        QName(PrivateNamespace(null, "kabam.lib.tasks:TaskSequence/instance#0"), "doNextTaskOrComplete"), 0

      jump                L18

L14:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      pushfalse
      getlocal3
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 2

L18:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.lib.tasks:TaskSequence/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
