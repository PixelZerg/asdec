class
 refid "com.company.assembleegameclient.mapeditor:Layer"
 instance QName(PackageNamespace("com.company.assembleegameclient.mapeditor"), "Layer")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("com.company.assembleegameclient.mapeditor:Layer")
  iinit
   refid "com.company.assembleegameclient.mapeditor:Layer/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "com.company.assembleegameclient.mapeditor:Layer/class/init"
  body
   maxstack 5
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    findproperty        QName(PackageNamespace(""), "GROUND")
    pushbyte            0
    initproperty        QName(PackageNamespace(""), "GROUND")

    findproperty        QName(PackageNamespace(""), "OBJECT")
    pushbyte            1
    initproperty        QName(PackageNamespace(""), "OBJECT")

    findproperty        QName(PackageNamespace(""), "REGION")
    pushbyte            2
    initproperty        QName(PackageNamespace(""), "REGION")

    findproperty        QName(PackageNamespace(""), "NUM_LAYERS")
    pushbyte            3
    initproperty        QName(PackageNamespace(""), "NUM_LAYERS")

    findproperty        QName(PackageNamespace(""), "EMPTY_TILE")
    findpropstrict      Multiname("Vector", [PackageNamespace("__AS3__.vec")])
    getproperty         Multiname("Vector", [PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:Layer/class/init#0"), PackageNamespace(""), PackageNamespace("__AS3__.vec"), PrivateNamespace(null, "com.company.assembleegameclient.mapeditor:Layer/class/init#1"), PackageNamespace("com.company.assembleegameclient.mapeditor"), PackageInternalNs("com.company.assembleegameclient.mapeditor"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("com.company.assembleegameclient.mapeditor:Layer"), StaticProtectedNs("com.company.assembleegameclient.mapeditor:Layer")])
    getlex              QName(PackageNamespace(""), "int")
    applytype           1
    pushbyte            3
    construct           1
    dup
    pushbyte            0
    pushbyte            -1
    setproperty         MultinameL([PackageNamespace("")])

    dup
    pushbyte            1
    pushbyte            -1
    setproperty         MultinameL([PackageNamespace("")])

    dup
    pushbyte            2
    pushbyte            -1
    setproperty         MultinameL([PackageNamespace("")])

    initproperty        QName(PackageNamespace(""), "EMPTY_TILE")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "GROUND") slotid 1 type QName(PackageNamespace(""), "int") value Integer(0) end
 trait const QName(PackageNamespace(""), "OBJECT") slotid 2 type QName(PackageNamespace(""), "int") value Integer(1) end
 trait const QName(PackageNamespace(""), "REGION") slotid 3 type QName(PackageNamespace(""), "int") value Integer(2) end
 trait const QName(PackageNamespace(""), "NUM_LAYERS") slotid 4 type QName(PackageNamespace(""), "int") value Integer(3) end
 trait const QName(PackageNamespace(""), "EMPTY_TILE") slotid 5 type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "int")>) end
end ; class
