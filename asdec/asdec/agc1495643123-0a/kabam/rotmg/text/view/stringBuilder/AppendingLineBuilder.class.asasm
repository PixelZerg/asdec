class
 refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"
 instance QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
  extends QName(PackageNamespace(""), "Object")
  implements Multiname("StringBuilder", [PackageNamespace("kabam.rotmg.text.view.stringBuilder")])
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder")
  iinit
   refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/init"
   body
    maxstack 3
    localcount 1
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     getlex              Multiname("Vector", [PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("kabam.rotmg.text.view.stringBuilder"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), PackageInternalNs("kabam.rotmg.text.view.stringBuilder"), ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("__AS3__.vec")])
     getlex              QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")
     applytype           1
     construct           0
     initproperty        QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data")

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data") type TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")>) end
  trait slot QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "delimiter") type QName(PackageNamespace(""), "String") value Utf8("\n") end
  trait slot QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "provider") type QName(PackageNamespace("kabam.rotmg.language.model"), "StringMap") end
  trait method QName(PackageNamespace(""), "pushParams")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/pushParams"
    param QName(PackageNamespace(""), "String")
    param QName(PackageNamespace(""), "Object")
    param QName(PackageNamespace(""), "String")
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
    flag HAS_OPTIONAL
    optional Null()
    optional Utf8("")
    optional Utf8("")
    body
     maxstack 3
     localcount 5
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data")
      findpropstrict      QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")
      constructprop       QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData"), 0
      getlocal1
      callproperty        QName(PackageNamespace(""), "setKey"), 1
      getlocal2
      callproperty        QName(PackageNamespace(""), "setTokens"), 1
      getlocal3
      callproperty        QName(PackageNamespace(""), "setOpeningTags"), 1
      getlocal            4
      callproperty        QName(PackageNamespace(""), "setClosingTags"), 1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

      getlocal0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setDelimiter")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/setDelimiter"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.text.view.stringBuilder"), "AppendingLineBuilder")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "delimiter")

      getlocal0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setStringMap")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/setStringMap"
    param QName(PackageNamespace("kabam.rotmg.language.model"), "StringMap")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      initproperty        QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "provider")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "getString")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/getString"
    returns QName(PackageNamespace(""), "String")
    body
     maxstack 3
     localcount 5
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")
      setlocal2

      getlex              Multiname("Vector", [PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("kabam.rotmg.text.view.stringBuilder"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), PackageInternalNs("kabam.rotmg.text.view.stringBuilder"), ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("__AS3__.vec")])
      getlex              QName(PackageNamespace(""), "String")
      applytype           1
      construct           0
      coerce              TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace(""), "String")>)
      setlocal1

      pushbyte            0
      setlocal3

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data")
      coerce_a
      setlocal            4

      jump                L30

L18:
      label
      getlocal            4
      getlocal3
      nextvalue
      coerce              QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")
      setlocal2

      getlocal1
      getlocal2
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "provider")
      callproperty        QName(PackageNamespace(""), "getString"), 1
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "push"), 1

L30:
      hasnext2            4, 3
      iftrue              L18

      kill                4
      kill                3
      getlocal1
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "delimiter")
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "hasLines")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/hasLines"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 1
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data")
      getproperty         QName(PackageNamespace(""), "length")
      pushbyte            0
      equals
      not
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "clear")
   method
    refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance/clear"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getlex              Multiname("Vector", [PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("kabam.rotmg.text.view.stringBuilder"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), PackageInternalNs("kabam.rotmg.text.view.stringBuilder"), ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), PackageNamespace("__AS3__.vec")])
      getlex              QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"), "LineData")
      applytype           1
      construct           0
      initproperty        QName(PrivateNamespace(null, "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/instance"), "data")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
