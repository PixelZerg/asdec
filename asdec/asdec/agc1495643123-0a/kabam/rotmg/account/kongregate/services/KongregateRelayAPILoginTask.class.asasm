class
 refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"
 instance QName(PackageNamespace("kabam.rotmg.account.kongregate.services"), "KongregateRelayAPILoginTask")
  extends QName(PackageNamespace("kabam.lib.tasks"), "BaseTask")
  implements Multiname("RelayLoginTask", [PackageNamespace("kabam.rotmg.account.core.services")])
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask")
  iinit
   refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PackageNamespace(""), "account") flag METADATA type QName(PackageNamespace("kabam.rotmg.account.core"), "Account")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "api") flag METADATA type QName(PackageNamespace("kabam.rotmg.account.kongregate.view"), "KongregateApi")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "data") flag METADATA type QName(PackageNamespace("kabam.rotmg.account.web.model"), "AccountData")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "alreadyRegistered") flag METADATA type QName(PackageNamespace("kabam.rotmg.account.kongregate.signals"), "KongregateAlreadyRegisteredSignal")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait slot QName(PackageNamespace(""), "client") flag METADATA type QName(PackageNamespace("kabam.rotmg.appengine.api"), "AppEngineClient")
   metadata "Inject"
   end ; metadata
  end ; trait
  trait method QName(ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), "startTask") flag OVERRIDE
   method
    refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask:startTask"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "client")
      pushbyte            2
      callpropvoid        QName(Namespace("kabam.rotmg.appengine.api:AppEngineClient"), "setMaxRetries"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "client")
      getproperty         QName(Namespace("kabam.rotmg.appengine.api:AppEngineClient"), "complete")
      getlocal0
      getproperty         QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "onComplete")
      callpropvoid        QName(PackageNamespace(""), "addOnce"), 1

      getlocal0
      getproperty         QName(PackageNamespace(""), "client")
      pushstring          "/kongregate/internalRegister"
      getlocal0
      callproperty        QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "makeDataPacket"), 0
      callpropvoid        QName(Namespace("kabam.rotmg.appengine.api:AppEngineClient"), "sendRequest"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "makeDataPacket")
   method
    refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/makeDataPacket"
    returns QName(PackageNamespace(""), "Object")
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "api")
      callproperty        QName(Namespace("kabam.rotmg.account.kongregate.view:KongregateApi"), "getAuthentication"), 0
      coerce              QName(PackageNamespace(""), "Object")
      setlocal1

      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "account")
      callproperty        QName(Namespace("kabam.rotmg.account.core:Account"), "getUserId"), 0
      setproperty         Multiname("guid", [PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace("kabam.rotmg.account.kongregate.services"), PackageInternalNs("kabam.rotmg.account.kongregate.services"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.lib.tasks:BaseTask")])

      getlocal1
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "onComplete")
   method
    refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/onComplete"
    param QName(PackageNamespace(""), "Boolean")
    param null
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal1
      iffalse             L8

      getlocal0
      getlocal2
      callpropvoid        QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "onInternalRegisterDone"), 1

      jump                L16

L8:
      getlocal2
      getlex              QName(PackageNamespace(""), "ALREADY_REGISTERED")
      ifne                L16

      getlocal0
      getproperty         QName(PackageNamespace(""), "alreadyRegistered")
      getlocal0
      getproperty         QName(PackageNamespace(""), "data")
      callpropvoid        QName(PackageNamespace(""), "dispatch"), 1

L16:
      findpropstrict      QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask")
      getlocal1
      getlocal2
      callpropvoid        QName(ProtectedNamespace("kabam.lib.tasks:BaseTask"), "completeTask"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), "onInternalRegisterDone")
   method
    refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/onInternalRegisterDone"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace(""), "XML")
      getlocal1
      constructprop       QName(PackageNamespace(""), "XML"), 1
      coerce              QName(PackageNamespace(""), "XML")
      setlocal2

      getlocal0
      getproperty         QName(PackageNamespace(""), "account")
      getlocal2
      getproperty         Multiname("GUID", [PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace("kabam.rotmg.account.kongregate.services"), PackageInternalNs("kabam.rotmg.account.kongregate.services"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.lib.tasks:BaseTask")])
      getlocal2
      getproperty         Multiname("Secret", [PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace("kabam.rotmg.account.kongregate.services"), PackageInternalNs("kabam.rotmg.account.kongregate.services"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.lib.tasks:BaseTask")])
      pushstring          ""
      callpropvoid        QName(Namespace("kabam.rotmg.account.core:Account"), "updateUser"), 3

      getlocal0
      getproperty         QName(PackageNamespace(""), "account")
      getlocal2
      getproperty         Multiname("PlatformToken", [PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace(""), PrivateNamespace(null, "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance/kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/instance"), PackageNamespace("kabam.rotmg.account.kongregate.services"), PackageInternalNs("kabam.rotmg.account.kongregate.services"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask"), StaticProtectedNs("kabam.lib.tasks:BaseTask")])
      callpropvoid        QName(Namespace("kabam.rotmg.account.core:Account"), "setPlatformToken"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.account.kongregate.services:KongregateRelayAPILoginTask/class/init"
  body
   maxstack 2
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    findproperty        QName(PackageNamespace(""), "ALREADY_REGISTERED")
    pushstring          "Kongregate account already registered"
    initproperty        QName(PackageNamespace(""), "ALREADY_REGISTERED")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "ALREADY_REGISTERED") slotid 1 type QName(PackageNamespace(""), "String") value Utf8("Kongregate account already registered") end
end ; class
