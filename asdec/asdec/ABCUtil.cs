using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace asdec
{
    public static class ABCUtil
    {
        public enum Opcode : byte
        {
            OP_raw = 0x00, /// from RABCDASM
            OP_bkpt = 0x01,
            OP_nop = 0x02,
            OP_throw = 0x03,
            OP_getsuper = 0x04,
            OP_setsuper = 0x05,
            OP_dxns = 0x06,
            OP_dxnslate = 0x07,
            OP_kill = 0x08,
            OP_label = 0x09,
            OP_ifnlt = 0x0C,
            OP_ifnle = 0x0D,
            OP_ifngt = 0x0E,
            OP_ifnge = 0x0F,
            OP_jump = 0x10,
            OP_iftrue = 0x11,
            OP_iffalse = 0x12,
            OP_ifeq = 0x13,
            OP_ifne = 0x14,
            OP_iflt = 0x15,
            OP_ifle = 0x16,
            OP_ifgt = 0x17,
            OP_ifge = 0x18,
            OP_ifstricteq = 0x19,
            OP_ifstrictne = 0x1A,
            OP_lookupswitch = 0x1B,
            OP_pushwith = 0x1C,
            OP_popscope = 0x1D,
            OP_nextname = 0x1E,
            OP_hasnext = 0x1F,
            OP_pushnull = 0x20,
            OP_pushundefined = 0x21,
            OP_pushuninitialized = 0x22,
            OP_nextvalue = 0x23,
            OP_pushbyte = 0x24,
            OP_pushshort = 0x25,
            OP_pushtrue = 0x26,
            OP_pushfalse = 0x27,
            OP_pushnan = 0x28,
            OP_pop = 0x29,
            OP_dup = 0x2A,
            OP_swap = 0x2B,
            OP_pushstring = 0x2C,
            OP_pushint = 0x2D,
            OP_pushuint = 0x2E,
            OP_pushdouble = 0x2F,
            OP_pushscope = 0x30,
            OP_pushnamespace = 0x31,
            OP_hasnext2 = 0x32,
            OP_pushdecimal = 0x33,
            OP_pushdnan = 0x34,
            OP_li8 = 0x35,
            OP_li16 = 0x36,
            OP_li32 = 0x37,
            OP_lf32 = 0x38,
            OP_lf64 = 0x39,
            OP_si8 = 0x3A,
            OP_si16 = 0x3B,
            OP_si32 = 0x3C,
            OP_sf32 = 0x3D,
            OP_sf64 = 0x3E,
            OP_newfunction = 0x40,
            OP_call = 0x41,
            OP_construct = 0x42,
            OP_callmethod = 0x43,
            OP_callstatic = 0x44,
            OP_callsuper = 0x45,
            OP_callproperty = 0x46,
            OP_returnvoid = 0x47,
            OP_returnvalue = 0x48,
            OP_constructsuper = 0x49,
            OP_constructprop = 0x4A,
            OP_callsuperid = 0x4B,
            OP_callproplex = 0x4C,
            OP_callinterface = 0x4D,
            OP_callsupervoid = 0x4E,
            OP_callpropvoid = 0x4F,
            OP_sxi1 = 0x50,
            OP_sxi8 = 0x51,
            OP_sxi16 = 0x52,
            OP_applytype = 0x53,
            OP_newobject = 0x55,
            OP_newarray = 0x56,
            OP_newactivation = 0x57,
            OP_newclass = 0x58,
            OP_getdescendants = 0x59,
            OP_newcatch = 0x5A,
            OP_deldescendants = 0x5B,
            OP_findpropstrict = 0x5D,
            OP_findproperty = 0x5E,
            OP_finddef = 0x5F,
            OP_getlex = 0x60,
            OP_setproperty = 0x61,
            OP_getlocal = 0x62,
            OP_setlocal = 0x63,
            OP_getglobalscope = 0x64,
            OP_getscopeobject = 0x65,
            OP_getproperty = 0x66,
            OP_getpropertylate = 0x67,
            OP_initproperty = 0x68,
            OP_setpropertylate = 0x69,
            OP_deleteproperty = 0x6A,
            OP_deletepropertylate = 0x6B,
            OP_getslot = 0x6C,
            OP_setslot = 0x6D,
            OP_getglobalslot = 0x6E,
            OP_setglobalslot = 0x6F,
            OP_convert_s = 0x70,
            OP_esc_xelem = 0x71,
            OP_esc_xattr = 0x72,
            OP_convert_i = 0x73,
            OP_convert_u = 0x74,
            OP_convert_d = 0x75,
            OP_convert_b = 0x76,
            OP_convert_o = 0x77,
            OP_checkfilter = 0x78,
            OP_convert_m = 0x79,
            OP_convert_m_p = 0x7A,
            OP_coerce = 0x80,
            OP_coerce_b = 0x81,
            OP_coerce_a = 0x82,
            OP_coerce_i = 0x83,
            OP_coerce_d = 0x84,
            OP_coerce_s = 0x85,
            OP_astype = 0x86,
            OP_astypelate = 0x87,
            OP_coerce_u = 0x88,
            OP_coerce_o = 0x89,
            OP_negate_p = 0x8F,
            OP_negate = 0x90,
            OP_increment = 0x91,
            OP_inclocal = 0x92,
            OP_decrement = 0x93,
            OP_declocal = 0x94,
            OP_typeof = 0x95,
            OP_not = 0x96,
            OP_bitnot = 0x97,
            OP_concat = 0x9A,
            OP_add_d = 0x9B,
            OP_increment_p = 0x9C,
            OP_inclocal_p = 0x9D,
            OP_decrement_p = 0x9E,
            OP_declocal_p = 0x9F,
            OP_add = 0xA0,
            OP_subtract = 0xA1,
            OP_multiply = 0xA2,
            OP_divide = 0xA3,
            OP_modulo = 0xA4,
            OP_lshift = 0xA5,
            OP_rshift = 0xA6,
            OP_urshift = 0xA7,
            OP_bitand = 0xA8,
            OP_bitor = 0xA9,
            OP_bitxor = 0xAA,
            OP_equals = 0xAB,
            OP_strictequals = 0xAC,
            OP_lessthan = 0xAD,
            OP_lessequals = 0xAE,
            OP_greaterthan = 0xAF,
            OP_greaterequals = 0xB0,
            OP_instanceof = 0xB1,
            OP_istype = 0xB2,
            OP_istypelate = 0xB3,
            OP_in = 0xB4,
            OP_add_p = 0xB5,
            OP_subtract_p = 0xB6,
            OP_multiply_p = 0xB7,
            OP_divide_p = 0xB8,
            OP_modulo_p = 0xB9,
            OP_increment_i = 0xC0,
            OP_decrement_i = 0xC1,
            OP_inclocal_i = 0xC2,
            OP_declocal_i = 0xC3,
            OP_negate_i = 0xC4,
            OP_add_i = 0xC5,
            OP_subtract_i = 0xC6,
            OP_multiply_i = 0xC7,
            OP_getlocal0 = 0xD0,
            OP_getlocal1 = 0xD1,
            OP_getlocal2 = 0xD2,
            OP_getlocal3 = 0xD3,
            OP_setlocal0 = 0xD4,
            OP_setlocal1 = 0xD5,
            OP_setlocal2 = 0xD6,
            OP_setlocal3 = 0xD7,
            OP_debug = 0xEF,
            OP_debugline = 0xF0,
            OP_debugfile = 0xF1,
            OP_bkptline = 0xF2,
            OP_timestamp = 0xF3,
        }
        public enum OpcodeArgumentType
        {
            Unknown,

            ByteLiteral,
            UByteLiteral,
            IntLiteral,
            UIntLiteral,

            Int,
            UInt,
            Double,
            String,
            Namespace,
            Multiname,
            Class,
            Method,

            JumpTarget,
            SwitchDefaultTarget,
            SwitchTargets,
        }
        public struct OpcodeInfo
        {
            public OpcodeInfo(string name, OpcodeArgumentType[] at)
            {
                this.name = name;
                this.argumentTypes = at;
            }
            public string name;
            public OpcodeArgumentType[] argumentTypes;
        }

        public static readonly OpcodeInfo[] opcodeInfo = new OpcodeInfo[256]
        {
            #region opcode info
            /* 0x00 */
            new OpcodeInfo("db",                    new OpcodeArgumentType[]{OpcodeArgumentType.UByteLiteral}),
	/* 0x01 */		new OpcodeInfo("bkpt",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x02 */		new OpcodeInfo("nop",                   new OpcodeArgumentType[]{}),
	/* 0x03 */		new OpcodeInfo("throw",             new OpcodeArgumentType[]{}),
	/* 0x04 */		new OpcodeInfo("getsuper",          new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x05 */		new OpcodeInfo("setsuper",          new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x06 */		new OpcodeInfo("dxns",              new OpcodeArgumentType[]{OpcodeArgumentType.String}),
	/* 0x07 */		new OpcodeInfo("dxnslate",          new OpcodeArgumentType[]{}),
	/* 0x08 */		new OpcodeInfo("kill",              new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x09 */		new OpcodeInfo("label",             new OpcodeArgumentType[]{}),
	/* 0x0A */		new OpcodeInfo("0x0A",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x0B */		new OpcodeInfo("0x0B",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x0C */		new OpcodeInfo("ifnlt",             new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x0D */		new OpcodeInfo("ifnle",             new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x0E */		new OpcodeInfo("ifngt",             new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x0F */		new OpcodeInfo("ifnge",             new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x10 */		new OpcodeInfo("jump",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x11 */		new OpcodeInfo("iftrue",                new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x12 */		new OpcodeInfo("iffalse",               new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x13 */		new OpcodeInfo("ifeq",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x14 */		new OpcodeInfo("ifne",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x15 */		new OpcodeInfo("iflt",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x16 */		new OpcodeInfo("ifle",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x17 */		new OpcodeInfo("ifgt",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x18 */		new OpcodeInfo("ifge",              new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x19 */		new OpcodeInfo("ifstricteq",            new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x1A */		new OpcodeInfo("ifstrictne",            new OpcodeArgumentType[]{OpcodeArgumentType.JumpTarget}),
	/* 0x1B */		new OpcodeInfo("lookupswitch",      new OpcodeArgumentType[]{OpcodeArgumentType.SwitchDefaultTarget, OpcodeArgumentType.SwitchTargets}),
	/* 0x1C */		new OpcodeInfo("pushwith",          new OpcodeArgumentType[]{}),
	/* 0x1D */		new OpcodeInfo("popscope",          new OpcodeArgumentType[]{}),
	/* 0x1E */		new OpcodeInfo("nextname",          new OpcodeArgumentType[]{}),
	/* 0x1F */		new OpcodeInfo("hasnext",               new OpcodeArgumentType[]{}),
	/* 0x20 */		new OpcodeInfo("pushnull",          new OpcodeArgumentType[]{}),
	/* 0x21 */		new OpcodeInfo("pushundefined",     new OpcodeArgumentType[]{}),
	/* 0x22 */		new OpcodeInfo("pushuninitialized", new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x23 */		new OpcodeInfo("nextvalue",         new OpcodeArgumentType[]{}),
	/* 0x24 */		new OpcodeInfo("pushbyte",          new OpcodeArgumentType[]{OpcodeArgumentType.ByteLiteral}),
	/* 0x25 */		new OpcodeInfo("pushshort",         new OpcodeArgumentType[]{OpcodeArgumentType.IntLiteral}),
	/* 0x26 */		new OpcodeInfo("pushtrue",          new OpcodeArgumentType[]{}),
	/* 0x27 */		new OpcodeInfo("pushfalse",         new OpcodeArgumentType[]{}),
	/* 0x28 */		new OpcodeInfo("pushnan",               new OpcodeArgumentType[]{}),
	/* 0x29 */		new OpcodeInfo("pop",                   new OpcodeArgumentType[]{}),
	/* 0x2A */		new OpcodeInfo("dup",                   new OpcodeArgumentType[]{}),
	/* 0x2B */		new OpcodeInfo("swap",              new OpcodeArgumentType[]{}),
	/* 0x2C */		new OpcodeInfo("pushstring",            new OpcodeArgumentType[]{OpcodeArgumentType.String}),
	/* 0x2D */		new OpcodeInfo("pushint",               new OpcodeArgumentType[]{OpcodeArgumentType.Int}),
	/* 0x2E */		new OpcodeInfo("pushuint",          new OpcodeArgumentType[]{OpcodeArgumentType.UInt}),
	/* 0x2F */		new OpcodeInfo("pushdouble",            new OpcodeArgumentType[]{OpcodeArgumentType.Double}),
	/* 0x30 */		new OpcodeInfo("pushscope",         new OpcodeArgumentType[]{}),
	/* 0x31 */		new OpcodeInfo("pushnamespace",     new OpcodeArgumentType[]{OpcodeArgumentType.Namespace}),
	/* 0x32 */		new OpcodeInfo("hasnext2",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral, OpcodeArgumentType.UIntLiteral}),
	/* 0x33 */		new OpcodeInfo("pushdecimal",           new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x34 */		new OpcodeInfo("pushdnan",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x35 */		new OpcodeInfo("li8",                   new OpcodeArgumentType[]{}),
	/* 0x36 */		new OpcodeInfo("li16",              new OpcodeArgumentType[]{}),
	/* 0x37 */		new OpcodeInfo("li32",              new OpcodeArgumentType[]{}),
	/* 0x38 */		new OpcodeInfo("lf32",              new OpcodeArgumentType[]{}),
	/* 0x39 */		new OpcodeInfo("lf64",              new OpcodeArgumentType[]{}),
	/* 0x3A */		new OpcodeInfo("si8",                   new OpcodeArgumentType[]{}),
	/* 0x3B */		new OpcodeInfo("si16",              new OpcodeArgumentType[]{}),
	/* 0x3C */		new OpcodeInfo("si32",              new OpcodeArgumentType[]{}),
	/* 0x3D */		new OpcodeInfo("sf32",              new OpcodeArgumentType[]{}),
	/* 0x3E */		new OpcodeInfo("sf64",              new OpcodeArgumentType[]{}),
	/* 0x3F */		new OpcodeInfo("0x3F",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x40 */		new OpcodeInfo("newfunction",           new OpcodeArgumentType[]{OpcodeArgumentType.Method}),
	/* 0x41 */		new OpcodeInfo("call",              new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x42 */		new OpcodeInfo("construct",         new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x43 */		new OpcodeInfo("callmethod",            new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral, OpcodeArgumentType.UIntLiteral}),
	/* 0x44 */		new OpcodeInfo("callstatic",            new OpcodeArgumentType[]{OpcodeArgumentType.Method, OpcodeArgumentType.UIntLiteral}),
	/* 0x45 */		new OpcodeInfo("callsuper",         new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x46 */		new OpcodeInfo("callproperty",      new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x47 */		new OpcodeInfo("returnvoid",            new OpcodeArgumentType[]{}),
	/* 0x48 */		new OpcodeInfo("returnvalue",           new OpcodeArgumentType[]{}),
	/* 0x49 */		new OpcodeInfo("constructsuper",        new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x4A */		new OpcodeInfo("constructprop",     new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x4B */		new OpcodeInfo("callsuperid",           new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x4C */		new OpcodeInfo("callproplex",           new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x4D */		new OpcodeInfo("callinterface",     new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x4E */		new OpcodeInfo("callsupervoid",     new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x4F */		new OpcodeInfo("callpropvoid",      new OpcodeArgumentType[]{OpcodeArgumentType.Multiname, OpcodeArgumentType.UIntLiteral}),
	/* 0x50 */		new OpcodeInfo("sxi1",              new OpcodeArgumentType[]{}),
	/* 0x51 */		new OpcodeInfo("sxi8",              new OpcodeArgumentType[]{}),
	/* 0x52 */		new OpcodeInfo("sxi16",             new OpcodeArgumentType[]{}),
	/* 0x53 */		new OpcodeInfo("applytype",         new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x54 */		new OpcodeInfo("0x54",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x55 */		new OpcodeInfo("newobject",         new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x56 */		new OpcodeInfo("newarray",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x57 */		new OpcodeInfo("newactivation",     new OpcodeArgumentType[]{}),
	/* 0x58 */		new OpcodeInfo("newclass",          new OpcodeArgumentType[]{OpcodeArgumentType.Class}),
	/* 0x59 */		new OpcodeInfo("getdescendants",        new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x5A */		new OpcodeInfo("newcatch",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}), // ExceptionInfo index
	/* 0x5B */		new OpcodeInfo("deldescendants",        new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x5C */		new OpcodeInfo("0x5C",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x5D */		new OpcodeInfo("findpropstrict",        new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x5E */		new OpcodeInfo("findproperty",      new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x5F */		new OpcodeInfo("finddef",               new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x60 */		new OpcodeInfo("getlex",                new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x61 */		new OpcodeInfo("setproperty",           new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x62 */		new OpcodeInfo("getlocal",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x63 */		new OpcodeInfo("setlocal",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x64 */		new OpcodeInfo("getglobalscope",        new OpcodeArgumentType[]{}),
	/* 0x65 */		new OpcodeInfo("getscopeobject",        new OpcodeArgumentType[]{OpcodeArgumentType.UByteLiteral}),
	/* 0x66 */		new OpcodeInfo("getproperty",           new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x67 */		new OpcodeInfo("getpropertylate",       new OpcodeArgumentType[]{}),
	/* 0x68 */		new OpcodeInfo("initproperty",      new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x69 */		new OpcodeInfo("setpropertylate",       new OpcodeArgumentType[]{}),
	/* 0x6A */		new OpcodeInfo("deleteproperty",        new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x6B */		new OpcodeInfo("deletepropertylate",    new OpcodeArgumentType[]{}),
	/* 0x6C */		new OpcodeInfo("getslot",               new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x6D */		new OpcodeInfo("setslot",               new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x6E */		new OpcodeInfo("getglobalslot",     new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x6F */		new OpcodeInfo("setglobalslot",     new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x70 */		new OpcodeInfo("convert_s",         new OpcodeArgumentType[]{}),
	/* 0x71 */		new OpcodeInfo("esc_xelem",         new OpcodeArgumentType[]{}),
	/* 0x72 */		new OpcodeInfo("esc_xattr",         new OpcodeArgumentType[]{}),
	/* 0x73 */		new OpcodeInfo("convert_i",         new OpcodeArgumentType[]{}),
	/* 0x74 */		new OpcodeInfo("convert_u",         new OpcodeArgumentType[]{}),
	/* 0x75 */		new OpcodeInfo("convert_d",         new OpcodeArgumentType[]{}),
	/* 0x76 */		new OpcodeInfo("convert_b",         new OpcodeArgumentType[]{}),
	/* 0x77 */		new OpcodeInfo("convert_o",         new OpcodeArgumentType[]{}),
	/* 0x78 */		new OpcodeInfo("checkfilter",           new OpcodeArgumentType[]{}),
	/* 0x79 */		new OpcodeInfo("convert_m",         new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7A */		new OpcodeInfo("convert_m_p",           new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7B */		new OpcodeInfo("0x7B",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7C */		new OpcodeInfo("0x7C",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7D */		new OpcodeInfo("0x7D",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7E */		new OpcodeInfo("0x7E",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x7F */		new OpcodeInfo("0x7F",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x80 */		new OpcodeInfo("coerce",                new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x81 */		new OpcodeInfo("coerce_b",          new OpcodeArgumentType[]{}),
	/* 0x82 */		new OpcodeInfo("coerce_a",          new OpcodeArgumentType[]{}),
	/* 0x83 */		new OpcodeInfo("coerce_i",          new OpcodeArgumentType[]{}),
	/* 0x84 */		new OpcodeInfo("coerce_d",          new OpcodeArgumentType[]{}),
	/* 0x85 */		new OpcodeInfo("coerce_s",          new OpcodeArgumentType[]{}),
	/* 0x86 */		new OpcodeInfo("astype",                new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0x87 */		new OpcodeInfo("astypelate",            new OpcodeArgumentType[]{}),
	/* 0x88 */		new OpcodeInfo("coerce_u",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x89 */		new OpcodeInfo("coerce_o",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8A */		new OpcodeInfo("0x8A",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8B */		new OpcodeInfo("0x8B",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8C */		new OpcodeInfo("0x8C",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8D */		new OpcodeInfo("0x8D",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8E */		new OpcodeInfo("0x8E",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x8F */		new OpcodeInfo("negate_p",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x90 */		new OpcodeInfo("negate",                new OpcodeArgumentType[]{}),
	/* 0x91 */		new OpcodeInfo("increment",         new OpcodeArgumentType[]{}),
	/* 0x92 */		new OpcodeInfo("inclocal",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x93 */		new OpcodeInfo("decrement",         new OpcodeArgumentType[]{}),
	/* 0x94 */		new OpcodeInfo("declocal",          new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0x95 */		new OpcodeInfo("typeof",                new OpcodeArgumentType[]{}),
	/* 0x96 */		new OpcodeInfo("not",                   new OpcodeArgumentType[]{}),
	/* 0x97 */		new OpcodeInfo("bitnot",                new OpcodeArgumentType[]{}),
	/* 0x98 */		new OpcodeInfo("0x98",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x99 */		new OpcodeInfo("0x99",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9A */		new OpcodeInfo("concat",                new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9B */		new OpcodeInfo("add_d",             new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9C */		new OpcodeInfo("increment_p",           new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9D */		new OpcodeInfo("inclocal_p",            new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9E */		new OpcodeInfo("decrement_p",           new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0x9F */		new OpcodeInfo("declocal_p",            new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xA0 */		new OpcodeInfo("add",                   new OpcodeArgumentType[]{}),
	/* 0xA1 */		new OpcodeInfo("subtract",          new OpcodeArgumentType[]{}),
	/* 0xA2 */		new OpcodeInfo("multiply",          new OpcodeArgumentType[]{}),
	/* 0xA3 */		new OpcodeInfo("divide",                new OpcodeArgumentType[]{}),
	/* 0xA4 */		new OpcodeInfo("modulo",                new OpcodeArgumentType[]{}),
	/* 0xA5 */		new OpcodeInfo("lshift",                new OpcodeArgumentType[]{}),
	/* 0xA6 */		new OpcodeInfo("rshift",                new OpcodeArgumentType[]{}),
	/* 0xA7 */		new OpcodeInfo("urshift",               new OpcodeArgumentType[]{}),
	/* 0xA8 */		new OpcodeInfo("bitand",                new OpcodeArgumentType[]{}),
	/* 0xA9 */		new OpcodeInfo("bitor",             new OpcodeArgumentType[]{}),
	/* 0xAA */		new OpcodeInfo("bitxor",                new OpcodeArgumentType[]{}),
	/* 0xAB */		new OpcodeInfo("equals",                new OpcodeArgumentType[]{}),
	/* 0xAC */		new OpcodeInfo("strictequals",      new OpcodeArgumentType[]{}),
	/* 0xAD */		new OpcodeInfo("lessthan",          new OpcodeArgumentType[]{}),
	/* 0xAE */		new OpcodeInfo("lessequals",            new OpcodeArgumentType[]{}),
	/* 0xAF */		new OpcodeInfo("greaterthan",           new OpcodeArgumentType[]{}),
	/* 0xB0 */		new OpcodeInfo("greaterequals",     new OpcodeArgumentType[]{}),
	/* 0xB1 */		new OpcodeInfo("instanceof",            new OpcodeArgumentType[]{}),
	/* 0xB2 */		new OpcodeInfo("istype",                new OpcodeArgumentType[]{OpcodeArgumentType.Multiname}),
	/* 0xB3 */		new OpcodeInfo("istypelate",            new OpcodeArgumentType[]{}),
	/* 0xB4 */		new OpcodeInfo("in",                    new OpcodeArgumentType[]{}),
	/* 0xB5 */		new OpcodeInfo("add_p",             new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xB6 */		new OpcodeInfo("subtract_p",            new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xB7 */		new OpcodeInfo("multiply_p",            new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xB8 */		new OpcodeInfo("divide_p",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xB9 */		new OpcodeInfo("modulo_p",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBA */		new OpcodeInfo("0xBA",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBB */		new OpcodeInfo("0xBB",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBC */		new OpcodeInfo("0xBC",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBD */		new OpcodeInfo("0xBD",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBE */		new OpcodeInfo("0xBE",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xBF */		new OpcodeInfo("0xBF",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xC0 */		new OpcodeInfo("increment_i",           new OpcodeArgumentType[]{}),
	/* 0xC1 */		new OpcodeInfo("decrement_i",           new OpcodeArgumentType[]{}),
	/* 0xC2 */		new OpcodeInfo("inclocal_i",            new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0xC3 */		new OpcodeInfo("declocal_i",            new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0xC4 */		new OpcodeInfo("negate_i",          new OpcodeArgumentType[]{}),
	/* 0xC5 */		new OpcodeInfo("add_i",             new OpcodeArgumentType[]{}),
	/* 0xC6 */		new OpcodeInfo("subtract_i",            new OpcodeArgumentType[]{}),
	/* 0xC7 */		new OpcodeInfo("multiply_i",            new OpcodeArgumentType[]{}),
	/* 0xC8 */		new OpcodeInfo("0xC8",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xC9 */		new OpcodeInfo("0xC9",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCA */		new OpcodeInfo("0xCA",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCB */		new OpcodeInfo("0xCB",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCC */		new OpcodeInfo("0xCC",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCD */		new OpcodeInfo("0xCD",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCE */		new OpcodeInfo("0xCE",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xCF */		new OpcodeInfo("0xCF",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xD0 */		new OpcodeInfo("getlocal0",         new OpcodeArgumentType[]{}),
	/* 0xD1 */		new OpcodeInfo("getlocal1",         new OpcodeArgumentType[]{}),
	/* 0xD2 */		new OpcodeInfo("getlocal2",         new OpcodeArgumentType[]{}),
	/* 0xD3 */		new OpcodeInfo("getlocal3",         new OpcodeArgumentType[]{}),
	/* 0xD4 */		new OpcodeInfo("setlocal0",         new OpcodeArgumentType[]{}),
	/* 0xD5 */		new OpcodeInfo("setlocal1",         new OpcodeArgumentType[]{}),
	/* 0xD6 */		new OpcodeInfo("setlocal2",         new OpcodeArgumentType[]{}),
	/* 0xD7 */		new OpcodeInfo("setlocal3",         new OpcodeArgumentType[]{}),
	/* 0xD8 */		new OpcodeInfo("0xD8",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xD9 */		new OpcodeInfo("0xD9",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDA */		new OpcodeInfo("0xDA",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDB */		new OpcodeInfo("0xDB",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDC */		new OpcodeInfo("0xDC",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDD */		new OpcodeInfo("0xDD",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDE */		new OpcodeInfo("0xDE",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xDF */		new OpcodeInfo("0xDF",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE0 */		new OpcodeInfo("0xE0",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE1 */		new OpcodeInfo("0xE1",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE2 */		new OpcodeInfo("0xE2",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE3 */		new OpcodeInfo("0xE3",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE4 */		new OpcodeInfo("0xE4",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE5 */		new OpcodeInfo("0xE5",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE6 */		new OpcodeInfo("0xE6",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE7 */		new OpcodeInfo("0xE7",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE8 */		new OpcodeInfo("0xE8",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xE9 */		new OpcodeInfo("0xE9",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xEA */		new OpcodeInfo("0xEA",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xEB */		new OpcodeInfo("0xEB",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xEC */		new OpcodeInfo("0xEC",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xED */		new OpcodeInfo("0xED",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xEE */		new OpcodeInfo("0xEE",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xEF */		new OpcodeInfo("debug",             new OpcodeArgumentType[]{OpcodeArgumentType.UByteLiteral, OpcodeArgumentType.String, OpcodeArgumentType.UByteLiteral, OpcodeArgumentType.UIntLiteral}),
	/* 0xF0 */		new OpcodeInfo("debugline",         new OpcodeArgumentType[]{OpcodeArgumentType.UIntLiteral}),
	/* 0xF1 */		new OpcodeInfo("debugfile",         new OpcodeArgumentType[]{OpcodeArgumentType.String}),
	/* 0xF2 */		new OpcodeInfo("bkptline",          new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF3 */		new OpcodeInfo("timestamp",         new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF4 */		new OpcodeInfo("0xF4",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF5 */		new OpcodeInfo("0xF5",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF6 */		new OpcodeInfo("0xF6",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF7 */		new OpcodeInfo("0xF7",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF8 */		new OpcodeInfo("0xF8",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xF9 */		new OpcodeInfo("0xF9",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFA */		new OpcodeInfo("0xFA",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFB */		new OpcodeInfo("0xFB",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFC */		new OpcodeInfo("0xFC",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFD */		new OpcodeInfo("0xFD",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFE */		new OpcodeInfo("0xFE",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
	/* 0xFF */		new OpcodeInfo("0xFF",              new OpcodeArgumentType[]{OpcodeArgumentType.Unknown}),
            #endregion
        };

        public static OpcodeInfo? OpcodeByName(string name)
        {
            foreach (OpcodeInfo op in opcodeInfo)
            {
                if (op.name == name) return op;
            }
            return null;
        }
    }
}
